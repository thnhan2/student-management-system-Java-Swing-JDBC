package com.nhan.quanlysinhvien.view.newpackage;


import com.nhan.quanlysinhvien.model.UserAccount;
import com.nhan.quanlysinhvien.service.UserAccountService;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author huunh
 */
public class UserAccountIF extends javax.swing.JInternalFrame {

    private UserAccountService service;
    private DefaultTableModel model;
    public UserAccountIF() {
        initComponents();
        service = new UserAccountService();
        showTable();
        
        userAccountTable.setComponentPopupMenu(jPopupMenu1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        itemDelete = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        userAccountTable = new javax.swing.JTable();

        itemDelete.setText("Delete");
        itemDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDeleteActionPerformed(evt);
            }
        });
        jPopupMenu1.add(itemDelete);

        userAccountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(userAccountTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDeleteActionPerformed
       int row = userAccountTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(UserAccountIF.this, "Please select account to delete.", "delete account", JOptionPane.DEFAULT_OPTION);
        } else {
            int confirm = JOptionPane.showConfirmDialog(UserAccountIF.this, "Are you sure delete this account?");
            if (confirm == JOptionPane.YES_OPTION) {
                int stId = Integer.parseInt(String.valueOf(userAccountTable.getValueAt(row, 0)));
                
                if (service.deleteUserAccount(stId)) {
                    JOptionPane.showMessageDialog(rootPane, "delete successfully");
                }
                else{
                    JOptionPane.showMessageDialog(rootPane, "Delete failed");
                }
                
                
               model.setRowCount(0);
               showTable();
            }
        }
    }//GEN-LAST:event_itemDeleteActionPerformed
    public void showTable() {
         ArrayList<UserAccount> li = (ArrayList<UserAccount>)service.getAllUser();
        
         model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        
        model.addColumn("user id");
        model.addColumn("username");
        model.addColumn("role");
        model.addColumn("password");
        model.addColumn("status");
        for (UserAccount i : li) {
            Object[] rowData = {i.getUserId(), i.getUsername(), i.getRole(), i.getUserPassword(), i.getStatus()};
            model.addRow(rowData);
        }
        userAccountTable.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemDelete;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable userAccountTable;
    // End of variables declaration//GEN-END:variables
}
